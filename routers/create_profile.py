import asyncio
import os

from main import my_bot

from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram import Router, F
from aiogram.filters import Command, Filter
from aiogram.types import (Message, ReplyKeyboardRemove, PhotoSize)

from states import ChangeProfile
from answer_functions.create_keyboard import create_row_kb, create_menu_keyboard
from answer_functions.show_profile import show_profile

from db_directory.crud import user_exists, create_user, add_photo

# –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ
PHOTO_DIR = "/Users/mikhailtyo/Desktop/chatbot"
os.makedirs(PHOTO_DIR, exist_ok=True)

router = Router()

class isDigitFilter(Filter):
    async def __call__(self, message: Message) -> bool:
        if message.text:
            return message.text.isdigit() and int(message.text) in range(18, 100)
        else:
            return False

class CreateProfile(StatesGroup):
    waiting_start = State()
    setting_age = State()
    setting_faculty = State()
    setting_goals = State()
    setting_gender = State()
    setting_preference = State()
    setting_name = State()
    setting_description = State()
    setting_photo = State()

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    await state.update_data(telegram_username=message.from_user.username)

    telegram_id = message.from_user.id

    if await user_exists(telegram_id):
        await message.answer(
            text="–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –í–æ—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:",
            reply_markup=ReplyKeyboardRemove()
        )
        await show_profile(message=message)
        await create_menu_keyboard(message=message)
        await state.set_state(ChangeProfile.selects_menu)
    else:
        await message.answer(
            text="–ü—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —Ç—ã –∑–¥–µ—Å—å, –∑–Ω–∞—á–∏—Ç, —Ç—ã –æ—Ç–∫—Ä—ã—Ç –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º.\n\n"
                 "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
                 "–ú—ã –ø–æ—Å—á–∏—Ç–∞–ª–∏, —á—Ç–æ –≤ –Ω–∞—à–µ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞–º–∏, "
                 "–∞ –≤—Ä–µ–º—è –Ω–∞ –∂–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ –Ω–∞–π—Ç–∏ –Ω–µ –≤—Å–µ–≥–¥–∞ —É–¥–∞—ë—Ç—Å—è. "
                 "–ù–∞–¥–µ–µ–º—Å—è, –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ–º–æ–∂–µ—Ç —Ä–µ—à–∏—Ç—å —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É ü§ç\n\n"
                 "–í –Ω–∞—à–µ–º –±–æ—Ç–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–µ–±–µ –ø–æ–ª–æ–≤–∏–Ω–∫—É, –¥—Ä—É–≥–∞ –∏–ª–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞.\n\n"
                 "–ù—É —á—Ç–æ, –Ω–∞—á–Ω—ë–º?\n\n"
                 "--------------------------\n"
                 "–∞–≤—Ç–æ—Ä –±–æ—Ç–∞: @creator_kitt",
            reply_markup=create_row_kb(["–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!"])
        )
        await state.set_state(CreateProfile.waiting_start)

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞, –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤–æ–∑—Ä–∞—Å—Ç—É
@router.message(CreateProfile.waiting_start, F.text.lower() == "–¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!")
async def chosen_start(message: Message, state: FSMContext):
    await message.answer(
        text="–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?",
        reply_markup=ReplyKeyboardRemove()
    )

    await state.set_state(CreateProfile.setting_age)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å—Ç–∞—Ä—Ç–∞
@router.message(CreateProfile.waiting_start)
async def chosen_start_incorrectly(message: Message):
    await message.answer(
        text="–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:",
        reply_markup=create_row_kb(["–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!"])
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞, –ø–µ—Ä–µ—Ö–æ–¥ –∫ faculty
@router.message(CreateProfile.setting_age, isDigitFilter())
async def chosen_age(message: Message, state: FSMContext):
    await state.update_data(age=int(message.text))

    await message.answer(
        text="–û—Ç–∫—É–¥–∞ —Ç—ã? –° –∫–∞–∫–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞, –∫—Ç–æ –º–∞—Å—Ç–µ—Ä (–µ—Å–ª–∏ –µ—Å—Ç—å)?",
        reply_markup=ReplyKeyboardRemove()
    )

    await state.set_state(CreateProfile.setting_faculty)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–∑—Ä–∞—Å—Ç
@router.message(CreateProfile.setting_age)
async def chosen_age_incorrectly(message: Message):
    await message.answer(
        text="–£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞, –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Ü–µ–ª—è–º
@router.message(CreateProfile.setting_faculty, F.text)
async def chosen_faculty(message: Message, state: FSMContext):
    await state.update_data(faculty=message.text)

    await message.answer(
        text="–ö–æ–≥–æ —Ç—ã –∏—â–µ—à—å?",
        reply_markup=create_row_kb(["–õ—é–±–æ–≤—å", "–î—Ä—É–∑–µ–π", "–ï–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤", "–í—Å–µ—Ö!"])
    )

    await state.set_state(CreateProfile.setting_goals)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç
@router.message(CreateProfile.setting_faculty)
async def chosen_faculty_incorrectly(message: Message):
    await message.answer(
        text="–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞, –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–ª–µ–π, –ø–µ—Ä–µ—Ö–æ–¥ –∫ –∏–º–µ–Ω–∏
@router.message(CreateProfile.setting_goals, F.text.lower().in_({"–ª—é–±–æ–≤—å", "–¥—Ä—É–∑–µ–π", "–µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤", "–≤—Å–µ—Ö!"}))
async def chosen_gender(message: Message, state: FSMContext):

    if message.text.lower() == "–ª—é–±–æ–≤—å":
        await state.update_data(sex="love")
    elif message.text.lower() == "–¥—Ä—É–∑–µ–π":
        await state.update_data(sex="friend")
    elif message.text.lower() == "–µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤":
        await state.update_data(sex="supporter")
    elif message.text.lower() == "–≤—Å–µ—Ö!":
        await state.update_data(sex="all")

    await message.answer(
        text="–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?",
        reply_markup=ReplyKeyboardRemove()
    )

    await state.set_state(CreateProfile.setting_name)

# –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–ª–µ–π
@router.message(CreateProfile.setting_goals)
async def chosen_gender_incorrectly(message: Message):
    await message.answer(
        text="–í—ã–±–µ—Ä–∏ –∫–æ–≥–æ —Ç—ã –∏—â–µ—à—å:",
        reply_markup=create_row_kb(["–õ—é–±–æ–≤—å", "–î—Ä—É–∑–µ–π", "–ï–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤", "–í—Å–µ—Ö!"])
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏, –ø–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–∏—Å–∞–Ω–∏—é
@router.message(CreateProfile.setting_name, F.text)
async def chosen_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)

    await message.answer(
        text=f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {message.text}!\n\n "
             f"–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ...\n\n"
             f"(–ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≥–æ, —á—Ç–æ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ—Ç –∏–¥–µ–π:\n"
             f"1. –ß—Ç–æ —Ç—ã –µ–ª –Ω–∞ –æ–±–µ–¥?\n"
             f"2. –ü–æ—á–µ–º—É —Ä–µ—à–∏–ª –ø–æ—Å—Ç—É–ø–∞—Ç—å –≤ –†–ì–ò–°–ò?\n"
             f"3. –ï—Å–ª–∏ –±—ã —Ç—ã –±—ã–ª —Ä—ã–±–æ–π, —Ç–æ –∫–∞–∫–æ–π?\n"
             f"4. –¢–≤–æ–π –ª—é–±–∏–º—ã–π —Ä–∞–π–æ–Ω –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞)\n\n"
             f"...–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–º, –∫–æ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏\n\n"
             f"‚ù§Ô∏è‚Äçü©π –ï—Å–ª–∏ –∏—â–µ—à—å –ª—é–±–æ–≤—å, —Ç–æ –æ–ø–∏—à–∏ —Å–≤–æ—é –∏–¥–µ–∞–ª—å–Ω—É—é –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É.\n"
             f"üíú –ï—Å–ª–∏ –∏—â–µ—à—å –¥—Ä—É–∑–µ–π, —Ç–æ –Ω–∞–ø–∏—à–∏, —á—Ç–æ –¥–ª—è —Ç–µ–±—è –¥—Ä—É–∂–±–∞.\n"
             f"ü©µ –ï—Å–ª–∏ –∏—â–µ—à—å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞, —Ç–æ —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–µ–π –∏–¥–µ–µ –∏ –∫—Ç–æ —Ç–µ–±–µ –Ω—É–∂–µ–Ω",
        reply_markup=create_row_kb(["–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"])
    )

    await state.set_state(CreateProfile.setting_description)

# –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏
@router.message(CreateProfile.setting_name)
async def chosen_name_incorrectly(message: Message):
    await message.answer(
        text=f"–ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –∏–º—è —Ç–µ–∫—Å—Ç–æ–º."
    )

# –û—Ç–∫–∞–∑ –æ—Ç –æ–ø–∏—Å–∞–Ω–∏—è, –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É —Ñ–æ—Ç–æ
@router.message(CreateProfile.setting_description, F.text.lower() == "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
async def chosen_cancel_description(message: Message, state: FSMContext):
    await state.update_data(bio=None)
    await message.answer(
        text="–ê —Ç–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ –æ–¥–Ω—É —Å–≤–æ—é —Å–∞–º—É—é –∫–ª—ë–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é!",
        reply_markup=ReplyKeyboardRemove()
    )
    await state.update_data(photos=[])
    await state.set_state(CreateProfile.setting_photo)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è, –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É —Ñ–æ—Ç–æ
@router.message(CreateProfile.setting_description, F.text)
async def chosen_description(message: Message, state: FSMContext):

    await state.update_data(bio=message.text)

    await message.answer(
        text="–ê —Ç–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ –æ–¥–Ω—É —Å–≤–æ—é —Å–∞–º—É—é –∫–ª—ë–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é!",
        reply_markup=ReplyKeyboardRemove()
    )

    await state.update_data(photos=[])

    await state.set_state(CreateProfile.setting_photo)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
@router.message(CreateProfile.setting_description)
async def chosen_description_incorrectly(message: Message):
    await message.answer(
        text=f"–ù–∞–ø–∏—à–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ –∏–ª–∏ –Ω–∞–∂–º–∏ \"–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å\".",
        reply_markup=create_row_kb(["–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"])
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ, –ø–µ—Ä–µ—Ö–æ–¥ –≤ "–º–µ–Ω—é"
@router.message(CreateProfile.setting_photo, F.photo[-1].as_('largest_photo'))
async def chosen_main_photo(message: Message, state: FSMContext, largest_photo: PhotoSize):
    data = await state.get_data()
    data["telegram_id"] = message.from_user.id
    cur_photos = data.get('photos', [])

    file = await my_bot.get_file(largest_photo.file_id)
    file_path = os.path.join(PHOTO_DIR, f"{file.file_id}.jpg")
    await my_bot.download(file, destination=file_path)
    cur_photos.append(file_path)

    await state.update_data(photos=cur_photos)

    if len(cur_photos) < 3:
        await message.answer(
            text=f"–î–æ–±–∞–≤–ª–µ–Ω–æ {len(cur_photos)} –∏–∑ 3. –î–æ–±–∞–≤–∏–º –µ—â—ë?",
            reply_markup=create_row_kb(["–ù–µ—Ç, —Ö–≤–∞—Ç–∏—Ç"])
        )
    else:
        user_data = await state.get_data()
        new_user = await create_user(
            message.from_user.id,
            user_data.get('telegram_username'),
            user_data.get('name'),
            user_data.get('age'),
            user_data.get('sex'),
            "both",
            user_data.get('bio'),
            user_data.get('faculty')
        )

        for photo_path in user_data.get('photos', []):
            await add_photo(new_user.telegram_id, photo_path)

        await message.answer("–¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:", reply_markup=ReplyKeyboardRemove())
        await show_profile(message=message)
        await create_menu_keyboard(message=message)
        await state.set_state(ChangeProfile.selects_menu)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–∞–∑–∞ –æ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ, –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã
@router.message(CreateProfile.setting_photo,
                F.text.lower() == "–Ω–µ—Ç, —Ö–≤–∞—Ç–∏—Ç")
async def chosen_one_main_photo_(message: Message, state: FSMContext):

    user_data = await state.get_data()
    user_data['telegram_id'] = message.from_user.id

    new_user = await create_user(
        message.from_user.id,
        user_data.get('telegram_username'),
        user_data.get('name'),
        user_data.get('age'),
        user_data.get('sex'),
        "both",
        user_data.get('bio'),
        user_data.get('faculty')
    )

    for photo_path in user_data.get('photos', []):
        await add_photo(new_user.telegram_id, photo_path)

    await message.answer(
        text="–¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:",
        reply_markup=ReplyKeyboardRemove()
    )

    await asyncio.sleep(1)

    await show_profile(message=message)
    await create_menu_keyboard(message=message)

    await state.set_state(ChangeProfile.selects_menu)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ñ–æ—Ç–æ
@router.message(CreateProfile.setting_photo)
async def chosen_main_photo_incorrect(message: Message):
    await message.answer(
        text="–≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è. –î–æ–±–∞–≤–∏–º –µ—â—ë –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é?",
        reply_markup=create_row_kb(["–ù–µ—Ç, —Ö–≤–∞—Ç–∏—Ç"])
    )

